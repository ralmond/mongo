% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MongoDB.R
\name{mdbUpdate}
\alias{mdbUpdate}
\alias{mdbUpdate,MongoDB-method}
\alias{mdbUpdate,mongo-method}
\title{Modify document(s) in a collection}
\usage{
mdbUpdate(
  db,
  query,
  update = "{\\"$set\\":{}}",
  filters = NULL,
  upsert = FALSE,
  multiple = FALSE
)

\S4method{mdbUpdate}{MongoDB}(
  db,
  query,
  update = "{\\"$set\\":{}}",
  filters = NULL,
  upsert = FALSE,
  multiple = FALSE
)

\S4method{mdbUpdate}{mongo}(
  db,
  query,
  update = "{\\"$set\\":{}}",
  filters = NULL,
  upsert = FALSE,
  multiple = FALSE
)
}
\arguments{
\item{db}{(or MongoDB mongo) -- The collection to modify.}

\item{query}{character -- A JSON document identifying the document(s)
to modify.}

\item{update}{character -- A JSON document identifying the changes
to make to a document.}

\item{filters}{character -- A JSON document which controls which documents in the collection
gets updated.  (See the "Mongolite User Manual").}

\item{upsert}{logical -- If true and the query returns no results,
then insert the document instead.}

\item{multiple}{logical -- If true, all documents matching \code{query}
are affected; if false, only the first one.}
}
\value{
A list with the returned object.
}
\description{
The \code{query} field identifies a number of documents.  The \code{update}
is a set of instructions for changing the documents.  The
\verb{\link{mdbReplace}} function replaces the document instead of
modifying it.
}
\details{
\subsection{Queries}{

The rules here match those for \verb{\link{mdbFind}}.
}

\subsection{Update Documents}{

This is a special document which describes how to modify the
document.  There are a number of commands described in the Mongo
documentation, of which the two most useful are \verb{$set} and
\verb{$unset}.

The \verb{$set} command takes as argument a JSON object giving field
value pairs.  If the field exists it value will be changed, if it
doesn't exist a new field will be created.  For example \code{'{"$set": {"processed":false}}'} will set the \code{processed} field to false,
additing it if necessary.

The \verb{$unset} command removes a field from a document.  For example,
\code{'{"$unset":{"processed":0}}'} removes the process field.  The
value after the field name is ignored.

For multiple complex changes, consider using
`\link{mdbAggregate} for more complex changes.
}
}
\examples{
 mdb <- MongoDB("testthis","test","mongodb://localhost",noMongo=!interactive())
 mdbDrop(mdb)
 mdbInsert(mdb,c('{"name":"Fred", "gender":"M"}',
                 '{"name":"George", "gender":"M"}'))
mdbFind(mdb)
mdbUpdate(mdb,'{"name":"Fred"}', '{"$set":{"gender":"F"}}')
mdbFind(mdb)
}
\seealso{
\verb{\link[mongolite]\{mongo\}}, \verb{\link{mdbReplace}}
\verb{\link{mdbFind}}, \verb{\link{mdbAggregate}}
}
