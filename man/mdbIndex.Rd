% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MongoDB.R
\name{mdbIndex}
\alias{mdbIndex}
\alias{mdbIndex,MongoDB-method}
\alias{mdbIndex,mongo-method}
\title{Build/remove an index for the collection.}
\usage{
mdbIndex(db, add = NULL, remove = NULL)

\S4method{mdbIndex}{MongoDB}(db, add = NULL, remove = NULL)

\S4method{mdbIndex}{mongo}(db, add = NULL, remove = NULL)
}
\arguments{
\item{db}{(or MongoDB mongo) -- Collection in question.}

\item{add}{character -- JSON object describing fields to index.}

\item{remove}{character -- Name of indexes to remove.}
}
\value{
data frame desribing indexes.
}
\description{
Build/remove an index for the collection.
}
\details{
If \code{add} is specified, then a new index is added.  If \code{remove} then
the index is removed.  If neither is specified, then a data frame
giving the existing indexes is returned.

The syntax of the \code{add} field is similar to the \code{sort} argument of
\verb{\link{mdbFind}.  The }remove\verb{function uses the}name` from the
returned data.frame.

If sorted queries are going to be frequent, then building indexes
will improve performance.
}
\examples{
irisdb <- MongoDB("iris",noMongo=!interactive())
mdbDrop(irisdb)
mdbInsert(irisdb,iris)
mdbIndex(irisdb,add=buildJQuery("Petal_Length"=1))
mdbIndex(irisdb,add='{"Petal_Length":1,"Petal_Width":-1}')
indexes <- mdbIndex(irisdb)
print(indexes)
mdbIndex(irisdb,remove="Petal_Length_1")
}
\seealso{
[\link[mongolite]{mongo}]
\url{https://www.mongodb.com/docs/manual/reference/method/db.collection.createIndex/}
}
