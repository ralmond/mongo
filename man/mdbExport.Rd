% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MongoDB.R
\name{mdbExport}
\alias{mdbExport}
\alias{mdbImport}
\alias{mdbExport,MongoDB-method}
\alias{mdbExport,mongo-method}
\alias{mdbImport,MongoDB-method}
\alias{mdbImport,mongo-method}
\title{Exports/imports data from external JSON or BSON file}
\usage{
mdbExport(
  db,
  con = stdout(),
  bson = FALSE,
  query = "{}",
  fields = "{}",
  sort = "{\\"_id\\":1}"
)

\S4method{mdbExport}{MongoDB}(
  db,
  con = stdout(),
  bson = FALSE,
  query = "{}",
  fields = "{}",
  sort = "{\\"_id\\":1}"
)

\S4method{mdbExport}{mongo}(
  db,
  con = stdout(),
  bson = FALSE,
  query = "{}",
  fields = "{}",
  sort = "{\\"_id\\":1}"
)

mdbImport(db, con, bson = FALSE)

\S4method{mdbImport}{MongoDB}(db, con, bson = FALSE)

\S4method{mdbImport}{mongo}(db, con, bson = FALSE)
}
\arguments{
\item{db}{(or MongoDB mongo) -- Database collection of focus}

\item{con}{connetion -- a file or other connection for import/export}

\item{bson}{logical -- If \code{TRUE} use BSON (binary JSON) if \code{FALSE}
then \code{JSON}}

\item{query}{character -- JSON expression providing a query
selecting records to export.  See \verb{\link{buildJQuery}}.}

\item{fields}{character -- JSON expression selecting fields of the
objects to be exported.  See \verb{\link{mdbFind}} for details.}

\item{sort}{character -- JSON expression indicating field and
direction for sorting exported records. See \verb{\link{mdbFind}} for details.}
}
\value{
miniprint object giving the status
}
\description{
Exports/imports data from external JSON or BSON file
}
\details{
The \code{export} function dumps a collection to a file or other
connection.  This can be in either plain text (utf8) \code{JSON} format,
or a binary \code{BSON} format (this is specific to Mongo).  The
\code{import} function reverses this process.

On export, the \code{query}, \code{fields} and \code{sort} fields can be used to
control what is exported.
}
\examples{
irisdb <- MongoDB("iris",noMongo=!interactive())
mdbDrop(irisdb)
mdbInsert(irisdb,iris)
mdbCount(irisdb)
outfile <- tempfile(fileext="json")
mdbExport(irisdb,file(outfile),sort='{"Petal_Length":-1}')
mdbDrop(irisdb)
mdbCount(irisdb)
mdbImport(irisdb,file(outfile))
mdbCount(irisdb)
}
\seealso{
[\link[mongolite]{mongo}]
\url{https://www.mongodb.com/docs/manual/reference/command/import/}
\url{https://www.mongodb.com/docs/manual/reference/command/export/}
}
