% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MongoDB.R
\name{mdbReplace}
\alias{mdbReplace}
\alias{mdbUpsert}
\alias{mdbReplace,MongoDB-method}
\alias{mdbReplace,mongo-method}
\alias{mdbUpsert,JSONDB-method}
\title{Replace a document with a new document}
\usage{
mdbReplace(db, query, update = "{}", upsert = FALSE)

\S4method{mdbReplace}{MongoDB}(db, query, update = "{}", upsert = FALSE)

\S4method{mdbReplace}{mongo}(db, query, update = "{}", upsert = FALSE)

mdbUpsert(db, query, update = "{}", upsert = TRUE)

\S4method{mdbUpsert}{JSONDB}(db, query, update = "{}", upsert = TRUE)
}
\arguments{
\item{db}{(or MongoDB mongo) Reference to the collection.}

\item{query}{character Query as JSON document, see `\link{mdbFind}`
and `\link{buildJQuery}`.}

\item{update}{character Replacement document in JSON format.}

\item{upsert}{logical If `TRUE` document will be inserted if the
query does not return a result.}
}
\value{
miniprint with results.
}
\description{
Replace a document with a new document
}
\details{
In this method, the entire selected document (including the `_id`
field is replaced.  In the `\link{update}` method, the existing
record is modified.

The `query` arguement should return 0 or 1 arguments.  If it
returns 0 and `upsert` is `TRUE`, then the document is intserted.
The function `mbdUpsert(...)` is an alias for `mdbReplace(...,
upsert=TRUE)`.
}
\examples{
testdb <- MongoDB(noMongo=!interactive())
mdbDrop(testdb)
mdbInsert(testdb,'{"name":"Fred", "gender":"M"}')
mdbFind(testdb,fields='{}')
mdbReplace(testdb,'{"name":"Fred"}', '{"name":"Phred",
"gender":"F"}')
mdbFind(testdb,fields='{}')
}
\seealso{
[\link[mongolite]{mongo}] [\link{mdbFind}] [\link{mdbUpdate}]
\url{https://www.mongodb.com/docs/manual/reference/method/db.collection.replaceOne/}
}
